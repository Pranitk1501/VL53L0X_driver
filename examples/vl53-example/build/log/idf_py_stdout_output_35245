[1/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/vl53-example.c.obj
[2/10] Performing build step for 'bootloader'
[1/1] cd /home/pranit/esp/Be_project/VL53/examples/vl53-example/build/bootloader/esp-idf/esptool_py && /home/pranit/.espressif/python_env/idf5.2_py3.10_env/bin/python /home/pranit/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/pranit/esp/Be_project/VL53/examples/vl53-example/build/bootloader/bootloader.bin
Bootloader binary size 0x5320 bytes. 0x2ce0 bytes (35%) free.
[3/8] Linking C static library esp-idf/main/libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable vl53-example.elf
[6/8] Generating binary image from built executable
esptool.py v4.7.dev3
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /home/pranit/esp/Be_project/VL53/examples/vl53-example/build/vl53-example.bin
[7/8] cd /home/pranit/esp/Be_project/VL53/examples/vl53-example/build/esp-idf/esptool_py && /home/pranit/.espressif/python_env/idf5.2_py3.10_env/bin/python /home/pranit/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/pranit/esp/Be_project/VL53/examples/vl53-example/build/partition_table/partition-table.bin /home/pranit/esp/Be_project/VL53/examples/vl53-example/build/vl53-example.bin
vl53-example.bin binary size 0x33360 bytes. Smallest app partition is 0x100000 bytes. 0xccca0 bytes (80%) free.
[7/8] cd /home/pranit/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/pranit/esp/esp-idf -D "SERIAL_TOOL=/home/pranit/.espressif/python_env/idf5.2_py3.10_env/bin/python;;/home/pranit/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/pranit/esp/Be_project/VL53/examples/vl53-example/build -P /home/pranit/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32s3 -p /dev/ttyACM0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 vl53-example.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.dev3
Serial port /dev/ttyACM0
Connecting...
Chip is ESP32-S3 (QFN56) (revision v0.1)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_3v3)
Crystal is 40MHz
MAC: 7c:df:a1:e0:a4:bc
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x00043fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 21280 bytes to 13519...
Writing at 0x00000000... (100 %)
Wrote 21280 bytes (13519 compressed) at 0x00000000 in 0.4 seconds (effective 417.8 kbit/s)...
Hash of data verified.
Compressed 209760 bytes to 114767...
Writing at 0x00010000... (12 %)
Writing at 0x0001c95a... (25 %)
Writing at 0x0002234c... (37 %)
Writing at 0x000288d3... (50 %)
Writing at 0x0002f3ab... (62 %)
Writing at 0x00037218... (75 %)
Writing at 0x0003cdbd... (87 %)
Writing at 0x000432ea... (100 %)
Wrote 209760 bytes (114767 compressed) at 0x00010000 in 2.3 seconds (effective 724.0 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 652.7 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
